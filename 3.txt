Authors:
Jonna

Kunskapsmål:
Om CD/CI samt dess anknytning till modern agil systemutveckling och DevOps roll i det avseendet.

CI står för continuous integration

CI (continuous integration) är en kodfilosofi och en samling praxis som får utvecklare
att implementera små kodändringar och versionshantera kod oftare. Eftersom moderna
applikationer ofta kräver utveckling i olika plattformar och verktyg behöver vi ett sätt
att integrera och utvärdera förändrningar i kodbasen. 

Målet för CI är att etablera ett konsekvent och automatiserat sätt att utveckla, packetera
och testa vår applikation. Det leder till ett bättre sammarbete i teamet och en högre kvalitet på kodbasen.

CD står för continuous delivery / continuous deployment

CD (continuous delivery/deployment) tar vid där CI slutar. CD automatiserar leveransen av
vår applikation till de olika uppsatta miljöerna. Många utvecklingsteam arbetar i flera olika
miljöer, till exempel en utvecklingsmiljö, en testing-miljö och en produktionsmiljö och CD
ser till att det finns ett automatiserat sätt att pusha kodändringar till de olika miljöerna

Att arbeta med CI/CD pipelines gör att teamet levererar kod mer ofta och mer pålitligt.
Det är ett arbetssätt, en kultur och en samling av praxis för hur vi levererar vår kod.

Motsatsen till att arbeta enligt den principen är att spara stora batches av kod 
för att sen testa och deploya allt på en gång, vilket kan resultera i fler error och förseningar av releaser. 
Genom att arbeta enligt CI/CD uppdateras vår kodbas mer frekvent och är alltid levande och i sin senaste version.

Som DevOps sätter vi upp det automatiserade flödet för CI/CD vilket gör att våra utvecklare
kan fokusera på att uveckla och nå företagsmålen. För CI och CD finns olika ramverk och verktyg där några av de vanligaste är:
Kubernetes, Jenkins, Ansible, GitHub och BitBucket.

Referenser: 
https://www.infoworld.com/article/3271126/what-is-cicd-continuous-integration-and-continuous-delivery-explained.html

--------------------------------------------------------------------------------------------------------------------

Author: Jani
Mål:
CD/CI samt dess anknytning till modern agil systemutveckling och DevOps roll i det avseendet.

DevOps (Build, test, deploy)

DevOps är ett resultat av den agila metodikens behov av snabba cykler och handlar om samarbetet mellan utveckling (Dev)
och IT Operations (Ops). Det handlar om att möjliggöra en kultur och miljö där det går att bygga, testa och lansera
ofta, snabbt och tillförlitligt. Fokus ligger på kulturella och strukturella förändringar med syfte att föra samman de
som utvecklar och de som ansvarar för infrastrukturen. DevOps utnyttjar CI / CD pipelines för att uppnå snabbare och
pålitligare produktutveckling.

Continuous integration (CI)

Målet med continuous integration är att minska antalet komplexa kodsammanslagningar genom att kontinuerligt slå ihop
koden som utvecklas till en gemensam kodbas, helst så fort någon ny funktionalitet eller del av funktionalitet blivit
klar. Utöver att koden samlas ihop kontinuerligt ska den även byggas och testas automatiskt vid varje incheckning med
enhetstester för att se att den nya koden inte ger några oväntade följder.

Continuous delivery & deployment (CD)

Med continuous delivery avses att varje bygge teamet levererar kan släppas ut i produktion genom automatiserade flöden
som vidare testar och deployar koden till kunden.

Referenser:
https://www.frontit.se/articles/devops-ci-cd-vad-betyder-det-egentligen/
https://www.youtube.com/watch?v=scEDHsr3APg
